package main

import (
	"io/ioutil"
)

//MonoPng , representacion en byte de Binario .exe
type MonoPng struct {
	bytes []byte
	name  string
}

//Make , the binary file
func (app *MonoPng) Make() {
	app.name = "mono.png"
	app.bytes = []byte{137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,113,0,0,0,95,8,2,0,0,0,80,186,191,193,0,0,0,1,115,82,71,66,0,174,206,28,233,0,0,0,4,103,65,77,65,0,0,177,143,11,252,97,5,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,5,58,73,68,65,84,120,94,237,150,77,146,220,68,16,70,219,63,96,176,29,30,108,99,19,198,12,17,4,158,83,176,228,6,236,188,100,199,9,216,113,3,150,220,128,29,75,78,192,45,184,1,43,224,10,67,205,232,165,162,148,41,169,149,85,217,211,221,65,190,248,130,5,202,252,74,122,163,145,103,119,157,68,147,78,227,73,167,241,164,211,120,210,105,60,233,52,158,116,26,79,58,141,39,157,198,147,78,227,89,115,186,75,86,65,147,33,157,182,131,38,67,58,109,7,77,134,116,218,14,154,12,233,180,29,52,25,28,78,255,249,226,221,255,60,136,16,208,100,72,167,142,32,66,64,147,33,157,58,130,8,1,77,134,116,234,8,34,4,52,25,210,169,35,136,16,208,100,72,167,142,32,66,64,147,33,157,58,130,8,1,77,134,116,234,8,34,4,52,25,210,169,35,136,16,208,100,56,160,83,90,166,168,153,243,10,34,4,30,201,16,236,148,205,109,168,221,211,15,34,4,30,195,16,230,148,29,63,170,231,148,131,8,129,7,48,196,56,101,161,21,213,182,49,44,27,212,88,96,16,33,112,158,33,192,41,211,221,168,218,165,48,189,1,181,216,31,68,8,28,99,232,117,202,232,28,172,77,225,218,2,170,92,133,33,39,170,164,39,60,131,192,1,134,46,167,204,77,97,122,31,76,79,81,253,117,152,104,66,85,53,135,91,23,104,55,180,59,101,104,10,163,219,96,103,138,58,165,132,11,221,168,218,134,112,223,2,189,134,70,167,76,76,97,206,3,155,83,246,30,52,66,75,5,23,22,168,155,27,194,25,2,165,134,48,167,12,249,97,191,98,253,160,2,155,171,48,58,165,110,110,8,213,2,165,134,24,167,76,180,66,139,176,116,202,0,59,219,96,167,98,44,111,8,165,2,141,134,22,167,92,174,96,162,21,90,42,2,79,97,185,98,124,16,111,104,20,168,51,4,56,229,114,31,116,9,246,148,2,163,78,88,174,24,31,196,27,26,5,234,12,103,227,148,185,38,168,168,24,159,197,21,234,4,186,12,39,234,212,194,92,43,180,8,227,179,184,66,151,64,151,225,60,156,50,212,1,69,194,248,44,174,208,37,208,101,8,112,90,96,162,3,138,22,96,168,3,138,132,241,89,92,161,75,160,203,208,226,180,132,9,129,137,86,104,17,194,251,11,20,9,245,179,108,15,93,2,93,134,24,167,5,134,252,176,95,97,251,25,237,128,34,161,126,150,237,161,75,160,203,144,78,29,161,75,160,203,208,232,180,132,161,41,140,110,131,157,41,75,253,236,52,65,69,197,120,138,43,212,9,116,25,218,157,150,48,55,133,233,125,48,61,101,189,156,77,63,236,11,245,41,174,80,39,80,103,136,119,58,194,218,20,174,45,176,94,78,133,19,150,43,234,83,92,161,81,160,206,208,229,180,132,209,8,84,115,9,23,42,184,149,205,176,86,161,142,112,133,82,129,70,67,175,211,33,44,116,160,10,199,112,121,10,55,180,10,163,6,213,239,10,213,2,141,134,24,167,37,236,248,81,61,42,12,205,193,109,25,184,60,135,42,247,134,3,4,74,13,97,78,135,176,185,13,181,187,20,166,187,81,181,13,65,132,64,175,33,216,233,24,42,230,80,147,91,194,102,7,170,176,45,136,16,168,54,28,202,233,33,194,109,57,81,37,61,65,132,192,1,134,115,114,58,132,155,219,128,90,236,15,34,4,142,49,156,159,211,49,220,165,65,141,5,6,17,2,231,25,206,216,233,221,7,17,2,154,12,233,212,17,68,8,104,50,164,83,71,16,33,160,201,144,78,29,65,132,128,38,67,176,211,223,62,253,252,155,71,31,255,252,252,149,250,255,167,153,114,183,95,62,252,160,228,151,231,175,213,165,73,46,175,110,114,44,167,229,254,134,225,31,159,189,80,151,78,45,191,190,124,115,113,255,254,112,183,143,238,221,83,87,103,51,12,143,12,150,44,193,78,127,120,250,9,211,187,29,63,255,219,159,240,77,46,175,254,174,38,143,155,63,223,124,85,60,114,163,187,221,247,79,46,212,128,205,191,199,114,250,215,219,175,191,253,232,49,11,183,63,255,114,247,106,230,184,41,63,230,241,151,105,96,163,208,242,95,22,4,52,25,130,157,150,20,173,239,159,60,99,231,86,235,218,215,106,124,139,15,28,171,114,160,124,1,212,228,202,47,19,59,2,154,12,241,78,135,212,31,129,194,31,159,93,170,129,249,28,70,113,249,184,115,31,83,202,175,148,154,92,15,107,2,154,12,135,114,90,82,94,129,171,135,31,14,187,250,219,186,47,81,95,222,217,215,243,187,199,79,203,47,211,56,115,115,150,189,177,185,91,101,95,64,147,225,128,78,75,202,235,201,242,237,71,96,246,111,172,225,83,53,147,238,119,86,189,158,229,173,172,85,54,132,34,1,77,134,195,58,45,41,255,2,176,95,193,107,107,134,75,22,21,143,89,118,189,244,209,44,168,119,243,38,11,61,43,55,64,151,128,38,195,193,157,150,252,116,241,146,138,138,141,127,18,238,77,249,85,40,223,238,37,149,133,45,175,231,198,79,13,141,2,154,12,119,225,180,68,253,49,112,103,204,188,158,29,161,84,64,147,225,142,156,214,81,127,18,196,178,93,98,195,63,131,156,33,160,201,112,4,167,177,239,236,235,7,15,202,39,251,247,87,111,213,41,135,8,71,10,104,50,28,193,233,249,6,17,2,154,12,233,212,17,68,8,104,50,164,83,71,16,33,160,201,144,78,29,65,132,128,38,67,58,117,4,17,2,154,12,233,212,17,68,8,104,50,56,156,38,10,52,25,210,105,59,104,50,164,211,118,208,100,72,167,237,160,201,144,78,219,65,147,97,205,105,210,70,58,141,39,157,198,147,78,227,73,167,241,164,211,120,210,105,60,233,52,158,116,26,79,58,141,39,157,198,147,78,163,185,190,254,15,165,14,42,134,28,48,157,11,0,0,0,0,73,69,78,68,174,66,96,130}
	app.createFile()
}

//createFile , final step!
func (app *MonoPng) createFile() {
	e := ioutil.WriteFile(app.name, app.bytes, 0644)
	if e != nil {
		panic(e)
	}
}

func main() {
	content := MonoPng{}
	content.Make()

}
